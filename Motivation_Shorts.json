{
  "name": "Motivation_Shorts",
  "nodes": [
    {
      "parameters": {
        "sseEndpoint": "http://host.docker.internal:3123/mcp/sse",
        "include": "selected",
        "includeTools": [
          "create-short-video"
        ]
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -1120,
        -16
      ],
      "id": "d9f0351b-6a93-4ab3-b9cf-93cb7a3b3ffe",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6cc1bd80-2bb7-47b6-950e-be3d6a36a965",
              "leftValue": "={{ $json.status }}",
              "rightValue": "ready",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -464,
        -272
      ],
      "id": "75873415-3f0f-4332-862f-a09469ac5336",
      "name": "If"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"videoId\": {\n            \"type\": \"string\",\n            \"description\": \"the id of the video\"\n        },\n        \"videoTitle\": {\n            \"type\": \"string\",\n            \"description\": \"the title of the video on Youtube\"\n        }\n    },\n    \"required\": [\n        \"videoId\",\n        \"videoTitle\"\n    ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -1040,
        -112
      ],
      "id": "f8cf6c8a-eea5-47f1-a518-d1a42304a394",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "url": "=http://host.docker.internal:3123/api/short-video/{{ $('Generate video').item.json.output.videoId }}\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -256,
        -288
      ],
      "id": "578af12c-735a-4f23-ad68-5c07bc9dd947",
      "name": "Download the video",
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "upload",
        "title": "={{ $('Generate video').item.json.output.videoTitle }}",
        "regionCode": "IN",
        "categoryId": "27",
        "options": {
          "description": "Fuel your fire. Chase greatness. At TheAcepirant, we craft bold doses of motivation to awaken your ambition. For collaborations & paid promos: theacepirant@gmail.com #TheAcepirant ",
          "notifySubscribers": true,
          "privacyStatus": "public",
          "tags": "#ChaseGreatness #FuelYourFire #RiseAndGrind #AmbitionUnlocked #MindsetShift #InspoReels #SuccessDriven #MotivationHub #LevelUpNow #DreamDoRepeat"
        }
      },
      "type": "n8n-nodes-base.youTube",
      "typeVersion": 1,
      "position": [
        352,
        -688
      ],
      "id": "7019ed72-c8b0-47a9-8264-deb6620d1bc6",
      "name": "Share on YouTube",
      "credentials": {
        "youTubeOAuth2Api": {
          "id": "49cH6Fg66RbqR7xK",
          "name": "theacepirant YouTube account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<Instruction>\nConvert the provided story into a motivational video script optimized for text-to-speech delivery. Keep the original meaning intact, but lightly edit the text to improve clarity, flow, and pacing for spoken narration. Ensure the tone remains strongly motivational. If the story lacks a clear motivational message, revise it to include one. The final script must be timed to 10 seconds of speech (Â±1 second max) and result in a video output strictly under 10MB. Use the voice preset \"am_michle\" and the background music track \"hopeful\". Place the subtitles at the \"bottom\" of the video using the same wording as the spoken content.\n\nReturn the video ID and the title of the video for the Youtube upload.\n</Instruction>\n\n<motivational story>\n{{ $json.data[1].title }}\n\n{{ $json.data[1].content }}\n</motivational story>",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        -1248,
        -272
      ],
      "id": "693012ec-42ff-416f-833e-dbe9ec15f2f8",
      "name": "Generate video",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "maxTries": 5
    },
    {
      "parameters": {
        "url": "=http://host.docker.internal:3123/api/short-video/{{ $('Generate video').item.json.output.videoId }}/status",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -656,
        -272
      ],
      "id": "b3285df1-58cf-4d52-b2af-dee16b045982",
      "name": "Check video status",
      "alwaysOutputData": false,
      "retryOnFail": false
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1248,
        -112
      ],
      "id": "40fb1fc2-fe1b-4d44-9a12-7acfc6b16822",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "zcsM9HO55ruIc7RY",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://www.reddit.com/r/selfimprovement/top.json?t=day&limit=100",
        "options": {}
      },
      "name": "Fetch New Reddit Posts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1728,
        -272
      ],
      "id": "a51ef176-0899-4371-a32f-c6b41cfaa14a"
    },
    {
      "parameters": {
        "functionCode": "return items.map(item => {\n  return {\n    json: {\n      data: item.json.data.children\n        .filter(post => {\n          const content = post.data.selftext;\n          return content && content.split(/\\s+/).length >= 50; // 50+ words\n        })\n        .map(post => ({\n          title: post.data.title,\n          content: post.data.selftext // Full content (no truncation)\n        }))\n    }\n  };\n});"
      },
      "name": "Filter & Restructure Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -1552,
        -272
      ],
      "id": "0ce71939-21e7-47e4-9c75-67ad24026113"
    },
    {
      "parameters": {
        "functionCode": "// Shuffle array function\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n// Shuffle the posts before sending to video generation\nreturn items.map(item => {\n  if (item.json.data && item.json.data.length > 0) {\n    item.json.data = shuffleArray(item.json.data);\n  }\n  return item;\n});"
      },
      "name": "Shuffle Posts",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -1392,
        -272
      ],
      "id": "b9a496a5-37e9-41fc-b6dd-f70be2ac3e80"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        432,
        -416
      ],
      "id": "3abae4b6-73c2-4103-9eb5-b31275c30306",
      "name": "Wait: Reel Uploading",
      "webhookId": "616b2630-e6cb-4d1a-85ae-7447cbae58ec"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -864,
        -272
      ],
      "id": "1a045d58-c390-4b68-81dc-2efb0d1e2115",
      "name": "Wait: Video Generating",
      "webhookId": "fe4501f9-3334-4fc8-b3dd-83ea0ebb14a2"
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v22.0",
        "node": "17841476526732530",
        "edge": "media_publish",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "creation_id",
                "value": "={{ $json.id }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        656,
        -416
      ],
      "id": "2b99baf8-ae67-404f-89f2-649a7d3a1239",
      "name": "Insta Reel Poster",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "facebookGraphApi": {
          "id": "29PO9Yr6AYj7xQP4",
          "name": "Facebook Graph Instagram"
        }
      }
    },
    {
      "parameters": {
        "hostUrl": "graph-video.facebook.com",
        "httpRequestMethod": "POST",
        "graphApiVersion": "v22.0",
        "node": "17841476526732530",
        "edge": "media",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "video_url",
                "value": "={{ $json.content.download_url }}"
              },
              {
                "name": "media_type",
                "value": "REELS"
              },
              {
                "name": "caption",
                "value": "={{ $('Generate video').item.json.output.videoTitle }}\n\nFuel your fire. Chase greatness. At TheAcepirant, we craft bold doses of motivation to awaken your ambition.\nFor collaborations & paid promos: theacepirant@gmail.com\n\n#TheAcepirant #ChaseGreatness #FuelYourFire #RiseAndGrind #AmbitionUnlocked #MindsetShift #InspoReels #SuccessDriven #MotivationHub #LevelUpNow #DreamDoRepeat"
              },
              {
                "name": "cover_url",
                "value": "https://raw.githubusercontent.com/thebitanpaul/theacepirant-n8n-content-creation-automation/refs/heads/main/Reels_Cover.png"
              },
              {
                "name": "audio_name",
                "value": "The Acepirant Original Audio"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        208,
        -416
      ],
      "id": "11c5ae80-3263-42d0-ae4f-5ea5f895c05e",
      "name": "Insta Container",
      "credentials": {
        "facebookGraphApi": {
          "id": "29PO9Yr6AYj7xQP4",
          "name": "Facebook Graph Instagram"
        }
      }
    },
    {
      "parameters": {
        "content": "## YouTube ",
        "width": 336,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        192,
        -704
      ],
      "typeVersion": 1,
      "id": "69d3d7bf-14cb-4b4d-b054-2aae1264b2ab",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7037100d-296a-42e3-8095-198b5a14d515",
              "leftValue": "=id",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        816,
        -416
      ],
      "id": "1d9469e7-717c-4e3b-97fa-26774a5d47c8",
      "name": "If1"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1040,
        -400
      ],
      "id": "f6e60971-8c66-40f8-b321-b63db25ee329",
      "name": "Wait",
      "webhookId": "8cf6a3c5-69e9-47f4-b47d-1a1c842c88c5"
    },
    {
      "parameters": {
        "content": "## InstaGram",
        "height": 240,
        "width": 1040,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        192,
        -496
      ],
      "typeVersion": 1,
      "id": "678964a3-fbfc-40a1-a105-9d02c0926be2",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## faceBook",
        "height": 208,
        "width": 1184,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        192,
        -176
      ],
      "typeVersion": 1,
      "id": "efeeb8c2-e2de-41d9-bf16-9f4ea24f0624",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v23.0/767972256392621/video_reels?access_token=EAAPfSxDw6wkBPNTta2DBM9qFjqq3GW5iKBQpq0i2J7Szq1HOOWTtXCg7TMWoubLfJBibhgKvD3RyTK0sRLzmub0G36FEH9uDBvU0vdWJteIFtZCgvP1kcHxaSZAGxtOaDV70wt8pQvB8ZCrBoyb7zGz4NYIgWw8JnJNnLpzkDbK2ABTV9MvSgNGD2f0ws8ZAxOz3&video_id={{ $('Page Reel Init').item.json.video_id }}&upload_phase=finish&video_state=PUBLISHED&description={{ $('Generate video').item.json.output.videoTitle }} Fuel your fire. Chase greatness. At TheAcepirant, we craft bold doses of motivation to awaken your ambition.\nFor collaborations & paid promos: theacepirant@gmail.com\n\n#TheAcepirant #ChaseGreatness #FuelYourFire #RiseAndGrind #AmbitionUnlocked #MindsetShift #InspoReels #SuccessDriven #MotivationHub #LevelUpNow #DreamDoRepeat",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1216,
        -128
      ],
      "id": "d464838b-5316-4b7b-8fef-f2a07d270db3",
      "name": "Post Reel To Page"
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v22.0",
        "node": "767972256392621",
        "edge": "=video_reels",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "upload_phase",
                "value": "start"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        240,
        -112
      ],
      "id": "17759f92-e672-470f-86ac-fac8ec83dcb8",
      "name": "Page Reel Init",
      "executeOnce": false,
      "alwaysOutputData": false,
      "retryOnFail": true,
      "credentials": {
        "facebookGraphApi": {
          "id": "soK5C5BiX5w90ewC",
          "name": "Facebook Graph Page"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Page Reel Init').item.json.upload_url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "OAuth EAAPfSxDw6wkBPNTta2DBM9qFjqq3GW5iKBQpq0i2J7Szq1HOOWTtXCg7TMWoubLfJBibhgKvD3RyTK0sRLzmub0G36FEH9uDBvU0vdWJteIFtZCgvP1kcHxaSZAGxtOaDV70wt8pQvB8ZCrBoyb7zGz4NYIgWw8JnJNnLpzkDbK2ABTV9MvSgNGD2f0ws8ZAxOz3"
            },
            {
              "name": "file_url",
              "value": "={{ $('Reel URL Passthrough').item.json.content.download_url }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        416,
        -112
      ],
      "id": "640c22b4-712e-4858-83ae-9b428f80dfa4",
      "name": "Uploading Reel to Page"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        608,
        -112
      ],
      "id": "abaac370-0cb2-410e-a579-5e7542608fad",
      "name": "Wait: Video Uploading to Page",
      "webhookId": "fe4501f9-3334-4fc8-b3dd-83ea0ebb14a2"
    },
    {
      "parameters": {
        "url": "=https://graph.facebook.com/v23.0/{{ $('Page Reel Init').item.json.video_id }}?fields=status\n    &access_token=EAAPfSxDw6wkBPNTta2DBM9qFjqq3GW5iKBQpq0i2J7Szq1HOOWTtXCg7TMWoubLfJBibhgKvD3RyTK0sRLzmub0G36FEH9uDBvU0vdWJteIFtZCgvP1kcHxaSZAGxtOaDV70wt8pQvB8ZCrBoyb7zGz4NYIgWw8JnJNnLpzkDbK2ABTV9MvSgNGD2f0ws8ZAxOz3",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        816,
        -112
      ],
      "id": "1c5e1e5c-78b7-4e7f-8a6f-f6ad7900a85a",
      "name": "check Page Reel Status"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6cc1bd80-2bb7-47b6-950e-be3d6a36a965",
              "leftValue": "={{ $json.status.uploading_phase.status }}",
              "rightValue": "complete",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1008,
        -112
      ],
      "id": "97574bbd-4e10-4273-ac21-00797381e797",
      "name": "If Reel Ready To Post to Page"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "delete",
        "owner": {
          "__rl": true,
          "value": "thebitanpaul",
          "mode": "list",
          "cachedResultName": "thebitanpaul",
          "cachedResultUrl": "https://github.com/thebitanpaul"
        },
        "repository": {
          "__rl": true,
          "value": "theacepirant-n8n-content-creation-automation",
          "mode": "list",
          "cachedResultName": "theacepirant-n8n-content-creation-automation",
          "cachedResultUrl": "https://github.com/thebitanpaul/theacepirant-n8n-content-creation-automation"
        },
        "filePath": "={{ $('Reel URL Passthrough').item.json.content.path }}",
        "commitMessage": "Deleting uploaded reel"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1440,
        -128
      ],
      "id": "6b80f104-e28d-46b3-94ae-d02621020b16",
      "name": "Delete uploaded Reel",
      "webhookId": "7bc8c9f6-bed6-4ef2-89e4-607fcdbc2d0e",
      "credentials": {
        "githubApi": {
          "id": "WZtolSjiZlxCUfOO",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "thebitanpaul",
          "mode": "list",
          "cachedResultName": "thebitanpaul",
          "cachedResultUrl": "https://github.com/thebitanpaul"
        },
        "repository": {
          "__rl": true,
          "value": "theacepirant-n8n-content-creation-automation",
          "mode": "list",
          "cachedResultName": "theacepirant-n8n-content-creation-automation",
          "cachedResultUrl": "https://github.com/thebitanpaul/theacepirant-n8n-content-creation-automation"
        },
        "filePath": "={{ $('Generate video').item.json.output.videoId }}.mp4",
        "binaryData": true,
        "commitMessage": "uploading for facebook page reels passthrough"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -32,
        -288
      ],
      "id": "69649c21-a859-4056-9e82-b47cfdff2ab4",
      "name": "Reel URL Passthrough",
      "webhookId": "04b57bce-7d68-4ea7-8156-143a4ab5276d",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "credentials": {
        "githubApi": {
          "id": "WZtolSjiZlxCUfOO",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 22,
              "triggerAtMinute": 30
            },
            {
              "triggerAtHour": 12,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1904,
        -272
      ],
      "id": "6ead7e08-7b7b-474b-bb59-1d636ec26bb7",
      "name": "Schedule Trigger",
      "notesInFlow": true
    }
  ],
  "pinData": {},
  "connections": {
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "Generate video",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Download the video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait: Video Generating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Generate video",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Download the video": {
      "main": [
        [
          {
            "node": "Share on YouTube",
            "type": "main",
            "index": 0
          },
          {
            "node": "Reel URL Passthrough",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate video": {
      "main": [
        [
          {
            "node": "Wait: Video Generating",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check video status": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate video",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Fetch New Reddit Posts": {
      "main": [
        [
          {
            "node": "Filter & Restructure Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter & Restructure Data": {
      "main": [
        [
          {
            "node": "Shuffle Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Shuffle Posts": {
      "main": [
        [
          {
            "node": "Generate video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Share on YouTube": {
      "main": [
        []
      ]
    },
    "Wait: Reel Uploading": {
      "main": [
        [
          {
            "node": "Insta Reel Poster",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait: Video Generating": {
      "main": [
        [
          {
            "node": "Check video status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insta Reel Poster": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insta Container": {
      "main": [
        [
          {
            "node": "Wait: Reel Uploading",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Insta Reel Poster",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Reel To Page": {
      "main": [
        [
          {
            "node": "Delete uploaded Reel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Page Reel Init": {
      "main": [
        [
          {
            "node": "Uploading Reel to Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Uploading Reel to Page": {
      "main": [
        [
          {
            "node": "Wait: Video Uploading to Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait: Video Uploading to Page": {
      "main": [
        [
          {
            "node": "check Page Reel Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check Page Reel Status": {
      "main": [
        [
          {
            "node": "If Reel Ready To Post to Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Reel Ready To Post to Page": {
      "main": [
        [
          {
            "node": "Post Reel To Page",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait: Video Uploading to Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reel URL Passthrough": {
      "main": [
        [
          {
            "node": "Insta Container",
            "type": "main",
            "index": 0
          },
          {
            "node": "Page Reel Init",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Fetch New Reddit Posts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b68c3e3a-24aa-4cb5-bc10-345c0f18fcae",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a32759c53e374383c09e38bd412c3b4e6b774340b9ee15771570064875354e94"
  },
  "id": "pmkYCHFzTQqKbNF3",
  "tags": []
}